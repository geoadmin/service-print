#
# The Apache mod_wsgi configuration file.
#
# We use mod_wsgi's daemon mode. And we assign a specific process
# group to the WSGI application.
#
# Note: once we use mod_wsgi 3 we'll be able to get rid of the
# Location block by passing process-group and application-group
# options to the WSGIScriptAlias directive.
#

RewriteEngine on
ExpiresActive on


AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/x-javascript application/javascript application/json application/xml
AddOutputFilterByType DEFLATE text/html text/plain text/xml

# uncomment this if you need HTTP authentication/authorization to work (with
# repoze.who or any other security toolkit), see the Apache mod_wsgi FAQ to
# understand why mod_wsgi doesn't pass the user credentials to the WSGI
# application by default.
# http://code.google.com/p/modwsgi/wiki/FrequentlyAskedQuestions#Access_Control_Mechanisms
WSGIPassAuthorization On

<IfModule mod_headers.c>
  Header set X-UA-Compatible "IE=Edge"
</IfModule>


# Redirect no-slash target to slashed version
RedirectMatch ^${apache_entry_path}$ ${apache_entry_path}/

# If URI has numbers at the start, we cache a year
# This allows a client to create their own cache and
# update at his discretion
RewriteRule ^${apache_entry_path}/[0-9]+/(.*)$ ${apache_entry_path}/$1 [E=${apache_base_path}setyearcache:true,PT]
Header merge Cache-Control "max-age=31536013, public" env=${apache_base_path}setyearcache


# Robots static files
RewriteRule ^${apache_entry_path}/robots.txt ${apache_entry_path}/static/${robots_file} [PT]
<LocationMatch ^${apache_entry_path}/static/(robots.txt|robots_prod.txt)>
    Header set Content-type "text/plain"
</LocationMatch>

# define a process group
# WSGIDaemonProcess, default are 1 process and 15 threads
WSGIDaemonProcess service-print:${apache_base_path} display-name=%{GROUP} user=${modwsgi_user} threads=${wsgi_threads}

# define the path to the WSGI app
WSGIScriptAliasMatch ^${apache_entry_path}/ ${wsgi_app}/

# Enabling CORS, has to be set after WSGI application
Header unset Access-control-allow-origin
Header always  set Access-Control-Allow-Origin "*"
Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS"
Header always set Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token"

# assign the WSGI app instance the process group defined aboven, we put the WSGI
# app instance in the global application group so it is always executed within
# the main interpreter
<Directory ${current_directory}/apache>
    Order allow,deny
    Allow from all
    WSGIProcessGroup service-print:${apache_base_path}
    WSGIApplicationGroup %{GLOBAL}
</Directory>


